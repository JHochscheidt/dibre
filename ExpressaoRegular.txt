			### Expressões regulares ###

		$$$ Modificadores $$$
	
		boolean b;
	(?i), Ignora maiúscula e minúscula
		b ="Java".matches("(?i)java");
	(?x), comentários
	(?m), Multilinhas
	(?s), Dottal

		$$$ Metacaracteres $$$
	
		b = "@".matches(".");
	\d dígitos 	[0-9]
		b = "2".matches("\\d");
	\D não é dígito [^0-9]
	\s espaços	[ \t\nx0B\f\r]
	\S não é espaço	[^\s]
	\w letra	[a-zA-Z_0-9]
		b = "a".matches("\\w");
	\W não é letra	[^\w]
		
	
		$$$ Quantificadores $$$

	X{n} 	X, exatamente n vezes
		"21".matches(\\d{2}");
	X{n,}	X, pelo menos n vezes
		"   ".matches("\\s{1,}"); // pelo menos 1 espaço
	X{n,m}	X, pelo menos n mas não mais do que m vezes
	X?	X, 0 ou 1 vez
	X*	X, 0 ou mais vezes
	X+	X, 1 ou mais vezes

		
		$$$ Metacaracteres de fronteira $$$

	^	Inicia
	$	Finaliza
	| 	Ou


	
		$$$ Agrupadores $$$
	
	[...]		Agrupamento
	[a-z]		Alcance
		"x".matches("[a-z]");
		"2".matches("[0-5]");
	[a-e][i-u]	União
	[a-z&&[aeiou]]	Intersecção
	[^abc]		Exceção
	[a-z&&[^m-p]]	Subtração
	\x		Fuga de literal

	
		$$$ Substituições $$$

	String doce = "Qual doce mais Doce que o DOCE?";
	String r = doce.replaceAll("(?i)doce", "DOCINHO");


	String rato = "O rato roeu a roupa do rei de roma";
	r = rato.replaceAll("r[aeiou]","XX");
	
	r = "Tabular este texto".replaceAll("\\s","\t");



	String url = "www.xti.com.br/clientes-2011.html";
		//padrao http://www.xti.com.br/2011/clientes.jsp //Objetivo reestruturação
	String re = "(www.xti.com.br)/(\\w{2,})-(\\d{4}).html";
	b.url.matches(re);
	r = url.replaceAll(re,"http://$1/$3/$2.jsp");
	System.out.prinln(r, url);

	
	
	


		








